version: '3'

services:
    flask:
        build:
            context: .
            dockerfile: ./flask/Dockerfile
        container_name: flask_backend_dip
        ports: 
            - "5000:5000"
        networks:
            sol_net:
                ipv4_address: 172.28.19.05
        depends_on: 
            - db
        volumes:
            - ./flask/app/entrypoint.sh:/usr/sbin/entrypoint.sh
            - ./flask/app/cron/:/etc/cron.d/
            - ./flask/app/files/:/root/files/
            
        restart: on-failure
    nginx:
        build: ./nginx
        container_name: nginx_backend_dip
        ports:
            - "8000:8000"
        networks:
            sol_net:
                ipv4_address: 172.28.19.04
#    tensormodel:
#        image: tensorflow/serving:2.1.0-rc1
#        volumes:
#            - ./TensorflowServing:/models/FDSmodel
#        environment:
#            - MODEL_NAME=FDSmodel
#        networks:
#            appnet2:
#            ipv4_address: 172.18.18.04
    db:
        image: postgres:latest
        restart: unless-stopped
        volumes:
          - ./postgres2:/var/lib/postgresql/data
        environment:
          POSTGRES_USER : postgres
          POSTGRES_DB : postgres
          POSTGRES_PASSWORD : postgres
        ports:
          - "5432:5432"
        expose:
          - "5432"
        networks:
            sol_net:
                ipv4_address: 172.28.19.02

volumes:
    postgres-data:
networks:
    sol_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.19.0/24




